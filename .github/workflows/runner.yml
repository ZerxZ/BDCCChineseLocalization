name: Build BDDC Chinese Localization Nightly
on:
  workflow_dispatch:
  schedule:
    - cron: '15 13 * * *'
  push:
  pull_request:

permissions: write-all

env:
  GODOT_VERSION: 3.5.2
  PARATRANZ_TOKEN: ${{ secrets.PARATRANZ_TOKEN }}
  PARATRANZ_PROJECT: ${{ secrets.PARATRANZ_PROJECT }}
  EXPORT_NAME: BDCC
jobs:
  translate:
    name: 🌐 Translate
    runs-on: windows-latest
    steps:
      - name: Check Submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true

      - name: Checkout BDCC-Localization-Replacer
        uses: actions/checkout@v4
        with:
          repository: HCPTangHY/BDCC-Localization-Replacer
          ref: main
          submodules: 'recursive'
          path: 'BDCC-Localization-Replacer'

      - name: Set up .NET Sdk
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Run translation
        run: dotnet run --project BDCCChineseLocalization Translate ${{ env.PARATRANZ_TOKEN }} ${{ env.PARATRANZ_PROJECT }}
      - name: Upload translation artifact
        uses: actions/upload-artifact@v4
        with:
          name: bdcc-chinese-translation
          path: ./BdccChineseLocalization.zip
          retention-days: 7
  
  window-build:
    name: 🏁 Windows Build
    needs: translate
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.5.2
    steps:
      - name: Check Submodules
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download translation artifact
        uses: actions/download-artifact@v4
        with:
          name: bdcc-chinese-translation
      - name: Unzip translation artifact
        run: unzip BdccChineseLocalization.zip -d ./BdccChineseLocalization
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Build
        run: |
          mkdir -v -p ./build/windows
          cd BdccChineseLocalization
          godot --export "Windows Desktop" ../build/windows/${EXPORT_NAME}.exe
      - name: Zip
        run: |
          cd ./build/windows/
          zip -r BDCC-Windows.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bdcc-windows
          path: ./build/windows/BDCC-Windows.zip
          retention-days: 7
  
  linux-build:
    name: 🐧 Linux Build
    needs: translate
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.5.2
    steps:
      - name: Check Submodules
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download translation artifact
        uses: actions/download-artifact@v4
        with:
          name: bdcc-chinese-translation
      - name: Unzip translation artifact
        run: unzip BdccChineseLocalization.zip -d ./BdccChineseLocalization
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          ls /root/.local/share/godot/templates/${GODOT_VERSION}.stable
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
          ls ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Build
        run: |
          mkdir -v -p ./build/linux
          cd BdccChineseLocalization
          godot --export "Linux/X11" ../build/linux/${EXPORT_NAME}.x86_64
      - name: Zip
        run: |
          cd ./build/linux/
          zip -r BDCC-Linux.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bdcc-linux
          path: ./build/linux/BDCC-Linux.zip
          retention-days: 7
  
  macos-build:
    name: 🍎 MacOS Build
    needs: translate
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.5.2
    steps:
      - name: Check Submodules
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download translation artifact
        uses: actions/download-artifact@v4
        with:
          name: bdcc-chinese-translation
      - name: Unzip translation artifact
        run: unzip BdccChineseLocalization.zip -d ./BdccChineseLocalization
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Build
        run: |
          mkdir -v -p ./build/macos
          cd BdccChineseLocalization
          godot --export "Mac OSX" ../build/macos/${EXPORT_NAME}.zip
      - name: Zip
        run: |
          cd ./build/macos/
          zip -r BDCC-Macos.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bdcc-macos
          path: ./build/macos/BDCC-Macos.zip
          retention-days: 7
  
  web-build:
    name: 🌐 Web Build
    needs: translate
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.5.2
    steps:
      - name: Check Submodules
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download translation artifact
        uses: actions/download-artifact@v4
        with:
          name: bdcc-chinese-translation
      - name: Unzip translation artifact
        run: unzip BdccChineseLocalization.zip -d ./BdccChineseLocalization
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Build
        run: |
          mkdir -v -p ./build/web
          cd BdccChineseLocalization
          godot --export "HTML5" ../build/web/index.html
      - name: Zip
        run: |
          cd ./build/web/
          zip -r BDCC-WEB.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bdcc-web
          path: ./build/web/BDCC-WEB.zip
          retention-days: 7
  android-build:
    name: 🤖 Android Build
    needs: translate
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.5.2
    steps:
      - name: Check Submodules
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download translation artifact
        uses: actions/download-artifact@v4
        with:
          name: bdcc-chinese-translation
      - name: Unzip translation artifact
        run: unzip BdccChineseLocalization.zip -d ./BdccChineseLocalization
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Godot Android export
        uses: dulvui/godot-android-export@v4
        with:
            working-directory: BdccChineseLocalization
            godot-version: ${{ env.GODOT_VERSION }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bdcc-android
          path: ./BBDC.apk
          retention-days: 7
  
  
  release:
    name: 🚀 Release
    needs: [ window-build, linux-build, macos-build, web-build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download Godot Artifact
        uses: actions/download-artifact@v4.1.4
        with:
          pattern: 'bdcc-*'
          merge-multiple: true
      - name: Set Release version env variable
        id: release-selector
        run: |
          echo "RELEASE_VERSION=$(date "+%y.%m.%d")" >> $GITHUB_OUTPUT
      - name: Automatic Pre Releases
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: "pre-latest"
          prerelease: true
          name: "Pre-Release ${{ env.RELEASE_VERSION }}"
          allowUpdates: true
          artifacts: |
            *.zip
      - name: Automatic Releases
        uses: ncipollo/release-action@v1.14.0
        env:
          RELEASE_VERSION: ${{ steps.release-selector.outputs.RELEASE_VERSION }}
        with:
          tag: "bdcc.${{ env.RELEASE_VERSION }}"
          prerelease: false
          name: "Bdcc Release ${{ env.RELEASE_VERSION }}"
          allowUpdates: true
          artifacts: |
            *.zip  
